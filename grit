#!/bin/bash

# Reset
Color_Off='\033[0m'       # Text Reset

# Regular Colors
Red='\033[0;31m'          # Red
Green='\033[0;32m'        # Green
Yellow='\033[0;33m'       # Yellow
Blue='\033[0;34m'         # Blue
Purple='\033[0;35m'       # Purple
Cyan='\033[0;36m'         # Cyan

if [ "$1" == "pull" ]; then
    if [ -z "$2" ]; then
        git pull origin develop --no-edit
    else
        git pull origin $2 --no-edit
    fi
elif [ "$1" == "push" ]; then
    if [ -z "$2" ]; then
        git push origin HEAD
    else
        git push origin $2
    fi
elif [ "$1" == "update" ]; then
    git pull origin master
elif [ "$1" == "diff" ]; then
    git diff --ignore-space-at-eol
elif [ "$1" == "commit" ]; then
    if [ -z "$2" ]; then
        git commit
    else
        git commit -m "$2"
    fi
elif [ "$1" == "uncommit" ]; then
    git reset --soft HEAD^
elif [ "$1" == "amend" ]; then
    git commit --amend --no-edit
elif [ "$1" == "-h" ]; then
    echo "readable git"
    echo "=== COMMANDS ========="
    echo "grit                  : list current branches and current modified files"
    echo "grit pull [branch]    : pull branch (or develop of none provided)"
    echo "grit push [branch]    : push to branch (or HEAD if non provided)"
    echo "grit update           : pull master branch"
    echo "grit diff             : show diff, ignoring whitespace changes at end of lines"
    echo "grit commit [message] : commit staged files with message (opens editor if none provided)"
    echo "grit uncommit         : un-commit the last commit without losing work"
    echo "grit amend            : amend the staged files to the last commit"
elif [ -z "$1" ]; then
    git branch
    if [[ $(git diff --stat --cached) ]]; then
        echo -e "${Green}Staged files:${Color_Off}"
        git diff --stat=$COLUMNS --cached --color | sed \$d
    fi
    if [[ $(git diff --stat) ]]; then
        echo -e "${Red}Not staged files:${Color_Off}"
        git diff --stat=$COLUMNS --color | sed \$d
    fi
    if [[ $(git ls-files --others --exclude-standard) ]]; then
        echo -e "${Blue}Untracked files:${Color_Off}"
        git ls-files --others --exclude-standard | sed  's/^/ /'
    fi
else
    git $@
fi
